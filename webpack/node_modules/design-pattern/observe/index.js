class Observer{
    constructor(){
        this.handlers={} 
    }
    /**
     * 
     * @param {*} key 发布事件的名称
     * @param {*} args 发布事件的参数
     */
    emit(key,args){
        let events = this.handlers[key],
            length = events && events.length 

        if(events && length){
            for(let i = 0;i < length; i++){
                events[i] && events[i].call(null,args)
            }
        }
        return this
    }

    on(key,handler){
        let events = this.handlers[key] || []

        if(typeof handler ==='function'){
            events.push(handler)
            this.handlers[key] = events;
        }

        return this
    }

    off(key,handler){
        let events = this.handlers[key]

        if(!handler){
            events = null
        }else if(events){
            for (var i = 0, l = events.length; i < l; i++) {
                if (events[i] === handler) {
                    events.splice(i, 1)
                }
            }
        }
        this.handlers[key] = events;

        return this;
    }
}

module.exports = Observer;